{"version":3,"sources":["components/Row.module.css","components/Options.module.css","App.module.css","container/Game.module.css","utils/enums.ts","components/Options.tsx","utils/seedRandom.ts","components/Land.tsx","contexts/selectContext.ts","components/Row.tsx","container/Game.tsx","utils/createMap.ts","utils/explore.ts","utils/select.ts","utils/toogleFlag.ts","App.tsx","index.tsx"],"names":["module","exports","GameState","LandState","Options","props","textStyle","window","innerWidth","display","className","classes","Container","Card","Label","Title","message","ButtonContiner","onClick","startNewGame","Submit","style","Cancel","resetThisGame","Difficulty","EASY","rows","cols","INTERMEDIATE","HARD","seed","Land","value","landState","toogleFlag","fs","landStyle","DISCOVERED","Discovered","UNDISCOVERED","UnDiscovered","FLAGGED","Flagged","number","Zero","One","Two","Three","Four","Five","Six","Seven","Eight","onContextMenu","e","preventDefault","fontSize","margin","selectContext","createContext","select","i","j","Row","size","rowNumber","rowState","rowMap","ratio","maxWidth","Math","min","innerHeight","maxHeight","floor","maxWidthLand","rowStyle","width","height","useContext","row","Array","map","item","LandOdd","LandEven","Game","gameMap","mapState","length","createMap","prob","random","newMap","fill","seedRandom","x","sin","explore","exploredMap","totalArea","setMapState","gameOver","oldState","arr","reduce","total","sum","ii","WON","LOST","newMapState","App","useState","gameDifficulty","setGameDifficulty","setGameMap","setTotalArea","RUNNING","isGameOver","setIsGameOver","resetGameMap","useCallback","useEffect","forEach","state","Provider","Navbar","ButtonContainer","Button","n","gd","createNewMap","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7042807.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Row_Row__3v0aS\",\"Land\":\"Row_Land__ABdEi\",\"Discovered\":\"Row_Discovered__2JvoO\",\"UnDiscovered\":\"Row_UnDiscovered__30hU_\",\"LandOdd\":\"Row_LandOdd__3mSMu\",\"LandEven\":\"Row_LandEven__2dLit\",\"Flagged\":\"Row_Flagged__2gjE5\",\"Zero\":\"Row_Zero__EABD6\",\"One\":\"Row_One__GfAeJ\",\"Two\":\"Row_Two__3YB3N\",\"Three\":\"Row_Three__2Q7_a\",\"Four\":\"Row_Four__6arg2\",\"Five\":\"Row_Five__3vPiD\",\"Six\":\"Row_Six__wyXhd\",\"Seven\":\"Row_Seven__a-AU3\",\"Eight\":\"Row_Eight__d1F4y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"Options_FormControl__1z3Uo\",\"Title\":\"Options_Title__dqGEG\",\"Container\":\"Options_Container__FO8yD\",\"Card\":\"Options_Card__qDHFZ\",\"Label\":\"Options_Label__1hFFO\",\"Submit\":\"Options_Submit__17aX6\",\"Cancel\":\"Options_Cancel__1rNXX\",\"ButtonContiner\":\"Options_ButtonContiner__1SbrE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"App_Button__3SFOE\",\"ButtonContainer\":\"App_ButtonContainer__2gykw\",\"Navbar\":\"App_Navbar__2dLpb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Game_Container__2TOfJ\"};","\nconst Difficulty = {\n  EASY: { rows: 9, cols: 9 },\n  INTERMEDIATE: { rows: 16, cols: 16 },\n  HARD: { rows: 16, cols: 30 },\n};\nenum GameState {\n  RUNNING,\n  LOST,\n  WON,\n}\nenum LandState{\n  FLAGGED,\n  DISCOVERED,\n  UNDISCOVERED\n}\nexport type DifficultyType = 'EASY' | 'INTERMEDIATE' | 'HARD';\n\nexport { Difficulty, GameState, LandState };\n","import { FC, FormEventHandler } from \"react\";\nimport classes from \"./Options.module.css\";\n\nconst Options: FC<{\n  startNewGame: Function;\n  resetThisGame: FormEventHandler;\n  message: string;\n}> = (props) => {\n  let textStyle = {};\n  if (window.innerWidth < 400) {\n    textStyle = { display: \"none\" };\n  }\n  return (\n    <div className={classes.Container}>\n      <div className={classes.Card}>\n        <h3 className={classes.Label + \" \" + classes.Title}>GameOver</h3>\n        <h4 className={classes.Label}>{props.message}</h4>\n        <div className={classes.ButtonContiner}>\n          <button\n            onClick={() => props.startNewGame(\"EASY\")}\n            className={classes.Submit}\n          >\n            <span style={textStyle}>Easy</span> 9x9\n          </button>\n          <button\n            onClick={() => props.startNewGame(\"INTERMEDIATE\")}\n            className={classes.Submit}\n          >\n            <span style={textStyle}>Intermediate</span>16x16\n          </button>\n          <button\n            onClick={() => props.startNewGame(\"HARD\")}\n            className={classes.Submit}\n          >\n            <span style={textStyle}>Hard</span>16x30\n          </button>\n        </div>\n        <button className={classes.Cancel} onClick={props.resetThisGame}>\n          Restart This Game\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Options;\n","const seedRandom = (seed: number) => () => {\n  let x = Math.sin(seed++) * 10000;\n  return x - Math.floor(x);\n};\n\nexport default seedRandom(Math.floor(Math.random() * 1000));","import { FC, MouseEventHandler } from \"react\";\nimport { LandState } from \"../utils/enums\";\nimport classes from \"./Row.module.css\";\n\ntype PropType = {\n  className: string;\n  value: number;\n  landState: number;\n  style: any;\n  onClick: MouseEventHandler;\n  fs:number;\n  toogleFlag: Function;\n};\n\nconst Land: FC<PropType> = ({\n  value,\n  landState,\n  style,\n  className,\n  onClick,\n  toogleFlag,\n  fs\n}) => {\n  let landStyle = \"\";\n  switch (landState) {\n    case LandState.DISCOVERED:\n      landStyle = classes.Discovered;\n      break;\n    case LandState.UNDISCOVERED:\n      landStyle = classes.UnDiscovered;\n      break;\n    case LandState.FLAGGED:\n      landStyle = classes.Flagged;\n      break;\n  }\n  let number = [\n    classes.Zero,\n    classes.One,\n    classes.Two,\n    classes.Three,\n    classes.Four,\n    classes.Five,\n    classes.Six,\n    classes.Seven,\n    classes.Eight,\n  ];\n  return (\n    <div className={classes.Land + \" \" + landStyle}>\n      <div\n        className={className}\n        style={style}\n        onClick={onClick}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          toogleFlag();\n        }}\n      >\n        <div className={number[value]} style={{fontSize: 0.5*fs, margin: \"auto\"}}>{\n          landState === LandState.DISCOVERED && value !== 0 && value \n        }</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Land;\n","import { createContext } from \"react\";\n\ntype contextType = {\n  select: (i: number, j: number) => void;\n  toogleFlag: (i: number, j: number) => void;\n};\n\nconst selectContext = createContext<contextType>({\n  select: (i, j) => {},\n  toogleFlag: (i, j) => {},\n});\n\nexport default selectContext;\n","import { FC, useContext } from \"react\";\nimport classes from \"./Row.module.css\";\nimport Land from \"./Land\";\nimport selectContext from \"../contexts/selectContext\";\n\ntype PropType = {\n  size: number;\n  rowNumber: number;\n  rowState: number[];\n  rowMap: number[];\n  ratio: number;\n};\n\nconst Row: FC<PropType> = ({ size, rowNumber, rowState, rowMap, ratio }) => {\n  let maxWidth = Math.min(ratio * (window.innerHeight - 90), window.innerWidth) - 20;\n  let maxHeight = Math.min(Math.floor(maxWidth / size), 75);\n  let maxWidthLand = Math.min(Math.floor(maxWidth / size), 75);\n  maxWidth = maxWidthLand * size;\n  let rowStyle = { width: maxWidth, height: maxHeight };\n  let landStyle = { height: maxWidthLand, width: maxWidthLand };\n  let { select, toogleFlag } = useContext(selectContext);\n  let row =\n    rowMap &&\n    rowState &&\n    [...new Array(size)].map((item, i) => (\n      <Land\n        landState={rowState[i]}\n        value={rowMap[i]}\n        style={landStyle}\n        key={i}\n        className={(i + rowNumber) % 2 ? classes.LandOdd : classes.LandEven}\n        onClick={() => select(rowNumber, i)}\n        toogleFlag={() => toogleFlag(rowNumber, i)}\n        fs={maxWidthLand}\n      ></Land>\n    ));\n  return (\n    <div style={rowStyle} className={classes.Row}>\n      {row}\n    </div>\n  );\n};\n\nexport default Row;\n","import { FC } from \"react\";\nimport Row from \"../components/Row\";\nimport classes from \"./Game.module.css\";\n\ntype PropType = {\n  gameMap: number[][];\n  rows: number;\n  cols: number;\n  gameOver: Function;\n  totalArea: number;\n  mapState: number[][];\n};\n\nconst Game: FC<PropType> = ({\n  gameMap,\n  cols,\n  rows,\n  mapState,\n}) => {\n  return (\n    gameMap && (\n      <div className={classes.Container}>\n        {[...new Array(rows)].map((item, i) => (\n          <Row\n            size={cols}\n            rowNumber={i}\n            key={i}\n            rowState={mapState[i]}\n            rowMap={gameMap[i]}\n            ratio={gameMap[0].length/gameMap.length}\n          />\n        ))}\n      </div>\n    )\n  );\n};\nexport default Game;\n","const createMap = (\n  cols: number,\n  rows: number,\n  prob: number,\n  random: Function\n) => {\n  const emptyMap = Array<number[]>(rows).fill(Array<number>(cols).fill(0));\n  const newMap = emptyMap.map((row) =>\n    row.map((item) => -1 * +(random() < prob))\n  );\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      if (newMap[i][j] === -1) {\n        if (i + 1 < rows) {\n          if (newMap[i + 1][j] !== -1) newMap[i + 1][j]++;\n          if (j + 1 < cols && newMap[i + 1][j + 1] !== -1)\n            newMap[i + 1][j + 1]++;\n          if (j - 1 >= 0 && newMap[i + 1][j - 1] !== -1) newMap[i + 1][j - 1]++;\n        }\n        if (i - 1 >= 0) {\n          if (newMap[i - 1][j] !== -1) newMap[i - 1][j]++;\n          if (j + 1 < cols && newMap[i - 1][j + 1] !== -1)\n            newMap[i - 1][j + 1]++;\n          if (j - 1 >= 0 && newMap[i - 1][j - 1] !== -1) newMap[i - 1][j - 1]++;\n        }\n        if (j + 1 < cols && newMap[i][j + 1] !== -1) newMap[i][j + 1]++;\n        if (j - 1 >= 0 && newMap[i][j - 1] !== -1) newMap[i][j - 1]++;\n      }\n    }\n  }\n  return newMap;\n};\n\nexport default createMap;\n","import { LandState } from \"../utils/enums\";\n\nconst explore = (\n  i: number,\n  j: number,\n  exploredMap: number[][],\n  map: number[][]\n) => {\n  exploredMap[i][j] = LandState.DISCOVERED;\n  if (map[i][j] === 0) {\n    const rows = exploredMap.length;\n    const cols = exploredMap[0].length;\n    if (i + 1 < rows) {\n      if (exploredMap[i + 1][j] === LandState.UNDISCOVERED)\n        explore(i + 1, j, exploredMap, map);\n      if (j + 1 < cols && exploredMap[i + 1][j + 1] === LandState.UNDISCOVERED)\n        explore(i + 1, j + 1, exploredMap, map);\n      if (j - 1 >= 0 && exploredMap[i + 1][j - 1] === LandState.UNDISCOVERED)\n        explore(i + 1, j - 1, exploredMap, map);\n    }\n    if (i - 1 >= 0) {\n      if (exploredMap[i - 1][j] === LandState.UNDISCOVERED) explore(i - 1, j, exploredMap, map);\n      if (j + 1 < cols && exploredMap[i - 1][j + 1] === LandState.UNDISCOVERED)\n        explore(i - 1, j + 1, exploredMap, map);\n      if (j - 1 >= 0 && exploredMap[i - 1][j - 1] === LandState.UNDISCOVERED)\n        explore(i - 1, j - 1, exploredMap, map);\n    }\n    if (j + 1 < cols && exploredMap[i][j + 1] === LandState.UNDISCOVERED)\n      explore(i, j + 1, exploredMap, map);\n    if (j - 1 >= 0 && exploredMap[i][j - 1] === LandState.UNDISCOVERED)\n      explore(i, j - 1, exploredMap, map);\n  }\n};\n\nexport default explore;\n","import explore from \"./explore\";\nimport { GameState, LandState } from \"../utils/enums\";\n\nconst select = (\n  i: number,\n  j: number,\n  totalArea: number,\n  mapState: LandState[][],\n  setMapState: Function,\n  gameMap: number[][],\n  gameOver: Function\n) => {\n  if (\n    mapState[i][j] === LandState.DISCOVERED ||\n    mapState[i][j] === LandState.FLAGGED\n  )\n    return;\n  const oldState = mapState.map((arr) => arr.map((item) => item));\n  if (gameMap[i][j] === -1) {\n    gameOver(GameState.LOST);\n    return;\n  }\n\n  if (gameMap !== null) explore(i, j, oldState, gameMap);\n  const found = oldState.reduce(\n    (total, item) =>\n      total + item.reduce((sum, ii) => sum + (ii === LandState.DISCOVERED?1:0), 0),\n    0\n  );\n  if (found === totalArea) {\n    gameOver(GameState.WON);\n    return;\n  }\n  setMapState(oldState);\n};\n\nexport default select;\n","import { LandState } from \"./enums\";\n\nconst toogleFlag = (\n  i: number,\n  j: number,\n  mapState: number[][],\n  setMapState: Function\n) => {\n  const newMapState = mapState.map((row) => row.map((item) => item));\n  if (newMapState[i][j] === LandState.UNDISCOVERED)\n    newMapState[i][j] = LandState.FLAGGED;\n  else if (newMapState[i][j] === LandState.FLAGGED)\n    newMapState[i][j] = LandState.UNDISCOVERED;\n  else return;\n  setMapState(newMapState);\n};\nexport default toogleFlag;\n","import classes from \"./App.module.css\";\nimport { FC, useCallback, useEffect, useState } from \"react\";\nimport Options from \"./components/Options\";\nimport { Difficulty, GameState, DifficultyType, LandState } from \"./utils/enums\";\nimport Game from \"./container/Game\";\nimport createMap from \"./utils/createMap\";\nimport random from \"./utils/seedRandom\";\nimport selectContext from \"./contexts/selectContext\";\nimport select from \"./utils/select\";\nimport toogleFlag from \"./utils/toogleFlag\";\n\nconst App: FC = () => {\n  const [gameDifficulty, setGameDifficulty] = useState<DifficultyType>(\"EASY\");\n  const [gameMap, setGameMap] = useState<number[][]>([[]]);\n  const [totalArea, setTotalArea] = useState<number>(0);\n  const [isGameOver, setIsGameOver] = useState<GameState>(GameState.RUNNING);\n  const [mapState, setMapState] = useState<LandState[][]>([[]]);\n\n  const resetGameMap = useCallback(() => {\n    const rows = Difficulty[gameDifficulty].rows;\n    const cols = Difficulty[gameDifficulty].cols;\n    const newMapState = Array(rows).fill(Array(cols).fill(LandState.UNDISCOVERED));\n    setMapState(newMapState);\n  }, [gameDifficulty]);\n\n  const createNewMap = (gd: DifficultyType) => {\n    if(gd !== gameDifficulty){\n      setGameDifficulty(gd);\n      return;\n    }\n    resetGameMap();\n    const rows = Difficulty[gd].rows;\n    const cols = Difficulty[gd].cols;\n    const newMap = createMap(cols, rows, 0.1, random);\n    let total = 0;\n    newMap.forEach((row) =>\n      row.forEach((item) => (total = total + (item !== -1 ? 1 : 0)))\n    );\n    setTotalArea(total);\n    setGameMap(newMap);\n  };\n\n  useEffect(() => {\n    resetGameMap();\n    const rows = Difficulty[gameDifficulty].rows;\n    const cols = Difficulty[gameDifficulty].cols;\n    const newMap = createMap(cols, rows, 0.1, random);\n    let total = 0;\n    newMap.forEach((row) =>\n      row.forEach((item) => (total = total + (item !== -1 ? 1 : 0)))\n    );\n    setTotalArea(total);\n    setGameMap(newMap);\n  }, [gameDifficulty, resetGameMap]);\n\n  let textStyle;\n  if (window.innerWidth < 400) {\n    textStyle = { display: \"none\" };\n  }\n\n  const gameOver = (state: GameState) => setIsGameOver(state);\n  return (\n    <selectContext.Provider\n      value={{\n        select: (i, j) =>\n          select(i, j, totalArea, mapState, setMapState, gameMap, gameOver),\n        toogleFlag: (i, j) => toogleFlag(i, j, mapState, setMapState),\n      }}\n    >\n      <div className={classes.Navbar}>\n        <div className={classes.ButtonContainer}>\n          <button\n            onClick={() => setGameDifficulty(\"EASY\")}\n            className={classes.Button}\n          >\n            <span style={textStyle}>Easy</span>\n            9x9\n          </button>\n          <button\n            onClick={() => setGameDifficulty(\"INTERMEDIATE\")}\n            className={classes.Button}\n          >\n            <span style={textStyle}> Intermediate</span> 16x16\n          </button>\n          <button\n            onClick={() => setGameDifficulty(\"HARD\")}\n            className={classes.Button}\n          >\n            <span style={textStyle}>Expert</span>\n            16x30\n          </button>\n        </div>\n      </div>\n      <Game\n        gameMap={gameMap}\n        mapState={mapState}\n        gameOver={setIsGameOver}\n        cols={Difficulty[gameDifficulty].cols}\n        rows={Difficulty[gameDifficulty].rows}\n        totalArea={totalArea}\n      />\n      {isGameOver !== GameState.RUNNING && (\n        <Options\n          message={isGameOver === GameState.WON ? \"You Won\" : \"You Lost\"}\n          resetThisGame={() => {\n            resetGameMap();\n            setIsGameOver(GameState.RUNNING);\n          }}\n          startNewGame={(n: DifficultyType) => {\n            createNewMap(n);\n            setIsGameOver(GameState.RUNNING);\n          }}\n        />\n      )}\n    </selectContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}